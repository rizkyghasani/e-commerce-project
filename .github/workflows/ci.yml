name: Backend CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ secrets.PGUSER }}
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD }}
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install
        working-directory: ./backend

      - name: Wait for PostgreSQL to be ready
        run: npx wait-on tcp:5432

      - name: Run database migrations (optional)
        run: |
          # Contoh cara menjalankan migrasi jika Anda memiliki migration tool
          # npx sequelize-cli db:migrate
        working-directory: ./backend

      - name: Run backend tests
        run: npm test
        working-directory: ./backend
        env:
          PGUSER: ${{ secrets.PGUSER }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGDATABASE: test_db
          PGHOST: localhost
          PGPORT: 5432
          JWT_SECRET: ${{ secrets.JWT_SECRET }}